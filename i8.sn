/#
    Please note that this is a draft, for testing the compiler,
    It will be changed to be functional and usible at the end of the day
    -Myvar

#/

scope Core
type i8 #all objects automaticaly inherits the object class
{

    #all objects must have a ToString Cast
    @public
    @overide
    #overide bace class tostring
    fn ToString() : str
    {
        return IntToString(this, 10);
    }

    @public
    @overide
    fn ToString(bace : i8) : str
    {
        when (bace <= 1 || bace >= 17)
        {
            throw "Only bace 2 till 16 is suported";
        }

        return IntToString(this, bace);
    }

    #the internal method
    @private
    fn IntToString(a : i32, radix : i8) : str
    {
        dec chars : str = "0123456789ABCDEF";
        dec tmp = "";
        dec i : i8 = 32;
        dec isNegative : bool = (a < 0);
        loop a <= 0
        {
            tmp[--i] = chars[-(a % radix)];
            a = -(a / radix);
        }

        loop a != 0
        {
            tmp[--i] = chars[a % radix];
            a /= radix;
        }

        when (isNegative)
        {
            tmp[--i] = '-';
        }

        return tmp;
    }
}
